{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Athena",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#patterns"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#comment"
		}
		
	],
	"repository": {
		"variables": {
			"patterns": [
				{
					"name": "meta.module.declaration.ath",
					"match": "\\b(module)\\s+([a-zA-Z]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.default.ath"
						},
						"2": {
							"name": "entity.name.module.ath"
						}
					}
				},
				{
					"name": "meta.function",
					"match": "(declare)\\s+([a-zA-Z^,\\s]+):\\s+.([a-zA-Z^\\s]*)[^a-zA-Z]*([a-zA-Z]+)",
					"captures" : {
						"1": {"name": "keyword.other.declare.ath"},
						"3": {"name": "entity.name.type.ath"},
						"4": {"name": "entity.name.type.ath"}
					}	
				}
				
			]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ath",
				"match": "\\b(define|match|check)\\b"
			},
			{
				"name": "meta.function",
				"match": "(define)\\s*\\W([\\w\\s]*[a-zA-Z]*)\\W",
				"captures": {
					"1": {"name": "keyword.control.ath"},
					"2": {"name": "entity.name.function.ath"}
				}
			},
			{
				"name": "keyword.control.assumption-base.ath",
				"match": "\\b(ab|assert|assume|exists|forall|pick-witness|pick-any|by-induction|conclude|holds|not|and|or)\\b"
			}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.assign.ath",
					"match": ":="
				},
				{
					"name": "keyword.operator.comparison.ath",
					"match": "(<=|>=|>|<|=)"
				},
				{
					
					"match": "(![a-zA-Z\\*-]*)(?:\\s)*",
					"captures": {
						"1": {"name": "keyword.operator.apply.ath"}

					}
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"begin": "#",
					"end": "$",
					"name": "comment.line"
				}
			]	
		},
		"strings": {
			"name": "string.quoted.double.ath",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.ath",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.ath"
}